name: Deploy on ECS
# on:
#   pull_request:
#     types: [closed]
#     branches:
#       - main
#     paths:
#       - 'src/**'
#       - 'container/**'
#       - 'poetry.lock'
#       - 'pyproject.toml'
#       - '.github/deploy-ecr.yml'

on:
  push:
    branches: [ "9" ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build Container Image
    runs-on: ubuntu-latest
    environment: ${{ startsWith(github.ref, 'refs/tags/v') && 'production' || 'develop' }}

    permissions:
      contents: 'read'
      id-token: 'write'
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: us-east-1
          role-session-name: github-session
      
      - name: Login to Amazon ECR
        id: login-aws-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push the tagged docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-aws-ecr.outputs.registry }}
          ECR_REPOSITORY: uai/serving-ml-model
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f container/Containerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG        

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ startsWith(github.ref, 'refs/tags/v') && 'production' || 'dev' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

