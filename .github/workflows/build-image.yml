name: Build ML Container Image
on:
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - 'pyproject.toml'
  push:
    branches:
      - main
    paths:
      - 'pyproject.toml'

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1

jobs:
  build_and_push:
    name: Build Container Image
    runs-on: ubuntu-latest
    environment: ${{ startsWith(github.ref, 'refs/tags/v') && 'production' || 'develop' }}

    permissions:
      contents: 'read'
      id-token: 'write'

    outputs:
      registry: ${{ steps.build-and-push.outputs.registry }}
      repository: ${{ steps.build-and-push.outputs.repository }}
      image_tag: ${{ steps.build-and-push.outputs.image_tag }}
      image: ${{ steps.build-and-push.outputs.image }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: github-session
  
      - name: Login to Amazon ECR
        id: login-aws-ecr
        uses: aws-actions/amazon-ecr-login@v1
              
      - name: Extract version from pyproject.toml
        id: get-version
        run: |
          # Esta línea extrae la versión usando grep y sed
          VERSION=$(grep -m 1 'version = ' pyproject.toml | sed 's/version = //g' | sed 's/"//g' | sed "s/'//g" | xargs)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

          - name: Build and push the tagged docker image to Amazon ECR
          id: build-and-push
          env:
            ECR_REGISTRY: ${{ steps.login-aws-ecr.outputs.registry }}
            ECR_REPOSITORY: uai/serving-ml-model
            IMAGE_TAG: ${{ steps.get-version.outputs.VERSION }}
          run: |
            # Usar el formato actualizado para establecer outputs
            echo "registry=$ECR_REGISTRY" >> $GITHUB_OUTPUT
            echo "repository=$ECR_REPOSITORY" >> $GITHUB_OUTPUT
            echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
            echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
            
            # Build and push the Docker image
              docker  build --platform linux/amd64 \
                -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG  \
                -f container/Containerfile .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


